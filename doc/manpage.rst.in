++++
re2c
++++

===================================
compile regular expressions to code
===================================

:Manual section: 1

SYNOPSIS
========

``re2c  [OPTIONS] INPUT [-o OUTPUT]``

``re2go [OPTIONS] INPUT [-o OUTPUT]``

DESCRIPTION
===========

Re2c is a lexer generator for C/C++ and Go. It finds regular expression specifications
in special-form comments and compiles them to deterministic finite state automata.
The user needs to provide interface code to bind the generated lexer to the program environment.
Re2c has many options, configurations and directives for customization of the generated code.
This manpage includes examples for re2RE2C_LANG.

EXAMPLE
=======

Input file
----------

.. include:: @top_srcdir@/examples/RE2C_LANG/01_basic.i--lang(RE2C_LANG).re
    :literal:
    :code: RE2C_LANG

Output file
-----------

.. include:: @top_srcdir@/examples/RE2C_LANG/01_basic.i--lang(RE2C_LANG).RE2C_LANG
    :literal:
    :code: RE2C_LANG

Options
=======
.. include:: @top_srcdir@/doc/manual/options/options.rst_
.. include:: @top_srcdir@/doc/manual/options/debug.rst_
.. include:: @top_srcdir@/doc/manual/options/internal.rst_

Warnings
========
.. include:: @top_srcdir@/doc/manual/warnings/warnings_general.rst_
.. include:: @top_srcdir@/doc/manual/warnings/warnings_list.rst_

Syntax
======
.. include:: @top_srcdir@/doc/manual/syntax/syntax.rst_

Regular expressions
===================
.. include:: @top_srcdir@/doc/manual/regexps/regular_expressions.rst_

Interface code
==============
.. include:: @top_srcdir@/doc/manual/api/interface.rst_
.. include:: @top_srcdir@/doc/manual/api/api.rst_

Directives
==============
.. include:: @top_srcdir@/doc/manual/directives/directives.rst_

Configurations
==============
.. include:: @top_srcdir@/doc/manual/configurations/configurations.rst_

EOF handling
============
.. include:: @top_srcdir@/doc/manual/eof/eof.rst_
.. include:: @top_srcdir@/doc/manual/eof/01_sentinel.rst_
.. include:: @top_srcdir@/examples/RE2C_LANG/eof/01_sentinel.--lang(RE2C_LANG).re
    :literal:
    :code: RE2C_LANG
.. include:: @top_srcdir@/doc/manual/eof/02_bounds_checking.rst_
.. include:: @top_srcdir@/examples/RE2C_LANG/eof/02_bounds_checking.--lang(RE2C_LANG).re
    :literal:
    :code: RE2C_LANG
.. include:: @top_srcdir@/doc/manual/eof/03_eof_rule.rst_
.. include:: @top_srcdir@/examples/RE2C_LANG/eof/03_eof_rule.--lang(RE2C_LANG).re
    :literal:
    :code: RE2C_LANG
.. include:: @top_srcdir@/doc/manual/eof/04_generic_api.rst_
.. include:: @top_srcdir@/examples/RE2C_LANG/eof/05_generic_api_eof_rule.--lang(RE2C_LANG).re
    :literal:
    :code: RE2C_LANG

Buffer refilling
================
.. include:: @top_srcdir@/doc/manual/fill/fill.rst_
.. include:: @top_srcdir@/doc/manual/fill/01_fill.rst_
.. include:: @top_srcdir@/examples/RE2C_LANG/fill/01_fill.--lang(RE2C_LANG).re
    :literal:
    :code: RE2C_LANG
.. include:: @top_srcdir@/doc/manual/fill/02_fill.rst_
.. include:: @top_srcdir@/examples/RE2C_LANG/fill/02_fill.--lang(RE2C_LANG).re
    :literal:
    :code: RE2C_LANG

Include files
=============
.. include:: @top_srcdir@/doc/manual/includes/includes.rst_

Header files
============
.. include:: @top_srcdir@/doc/manual/headers/headers.rst_

Input file
----------
.. include:: @top_srcdir@/examples/RE2C_LANG/headers/header.i--lang(RE2C_LANG)--type-header(src+lexer+lexer.RE2C_HEADER_EXT).re
    :literal:
    :code: RE2C_LANG

Header file
-----------
.. include:: @top_srcdir@/examples/RE2C_LANG/headers/src/lexer/lexer.RE2C_HEADER_EXT
    :literal:
    :code: RE2C_LANG

Submatch extraction
===================
.. include:: @top_srcdir@/doc/manual/submatch/submatch.rst_
.. include:: @top_srcdir@/doc/manual/submatch/submatch_example_stags.rst_
.. include:: @top_srcdir@/examples/RE2C_LANG/submatch/01_stags.--lang(RE2C_LANG).re
    :literal:
    :code: RE2C_LANG
.. include:: @top_srcdir@/doc/manual/submatch/submatch_example_posix.rst_
.. include:: @top_srcdir@/examples/RE2C_LANG/submatch/03_posix.--lang(RE2C_LANG).re
    :literal:
    :code: RE2C_LANG
.. include:: @top_srcdir@/doc/manual/submatch/submatch_example_mtags.rst_
.. include:: @top_srcdir@/examples/RE2C_LANG/submatch/02_mtags.--lang(RE2C_LANG).re
    :literal:
    :code: RE2C_LANG

Storable state
==============
.. include:: @top_srcdir@/doc/manual/state/state.rst_
Example
-------
.. include:: @top_srcdir@/examples/RE2C_LANG/state/push.f--lang(RE2C_LANG).re
    :literal:
    :code: RE2C_LANG

Reusable blocks
===============
.. include:: @top_srcdir@/doc/manual/reuse/reuse.rst_
Example
-------
.. include:: @top_srcdir@/examples/RE2C_LANG/reuse/reuse.r--input-encoding(utf8)--lang(RE2C_LANG).re
    :literal:
    :code: RE2C_LANG

Encoding support
================
.. include:: @top_srcdir@/doc/manual/encodings/encodings.rst_

Start conditions
================
.. include:: @top_srcdir@/doc/manual/conditions/conditions.rst_
Example
-------
.. include:: @top_srcdir@/examples/RE2C_LANG/conditions/parse_u32_conditions.ci--lang(RE2C_LANG).re
    :literal:
    :code: RE2C_LANG

Skeleton programs
=================
.. include:: @top_srcdir@/doc/manual/skeleton/skeleton.rst_

Visualization and debug
=======================
.. include:: @top_srcdir@/doc/manual/dot/dot.rst_

SEE ALSO
========
You can find more information about re2c at the official website: http://re2c.org.
Similar programs are flex(1), lex(1), quex(http://quex.sourceforge.net).

AUTHORS
=======
Re2c was originaly written by Peter Bumbulis in 1993.
Since then it has been developed and maintained by multiple volunteers;
mots notably, Brain Young, Marcus Boerger, Dan Nuffer and Ulya Trofimovich.
