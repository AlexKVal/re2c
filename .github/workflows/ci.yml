name: CI

on:
  push:
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  build-and-test:

    name: "${{ matrix.build-type }}: ${{ matrix.toolchain }}"
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        toolchain:
          - linux-gcc
          - macos-clang
          - windows-msvc

        build-type:
          - Debug
          - Release

        include:
          - toolchain: linux-gcc
            os: ubuntu-latest
            compiler: gcc

          - toolchain: macos-clang
            os: macos-latest
            compiler: clang

          - toolchain: windows-msvc
            os: windows-2019
            compiler: msvc

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup chocolatey Cache (Windows)
        if: startsWith(runner.os, 'Windows')
        uses: actions/cache@v2
        with:
          path: C:\Users\runneradmin\AppData\Local\Temp\chocolatey
          key: ${{ runner.os }}-chocolatey-${{ matrix.os }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-chocolatey-${{ matrix.os }}-
            ${{ runner.os }}-chocolatey-

      - name: Setup Common Prerequisites
        run: |
          case ${{ runner.os }} in
            Linux*)
              echo "::set-env name=CC::gcc"
              echo "::set-env name=CXX::g++"
              ;;
            macOS*)
              sudo xcode-select -switch /Applications/Xcode.app
              echo "::set-env name=CC::$(xcrun -f clang)"
              echo "::set-env name=CXX::$(xcrun -f clang++)"
              echo "::set-env name=SDKROOT::$(xcodebuild -version -sdk macosx Path)"
              echo "::set-env name=PATH::$(dirname $(xcrun -f clang)):$PATH"
              ;;
            Windows*)
              choco install --no-progress -y winflexbison3
              ;;
          esac

      - name: Configure (${{ matrix.build-type }})
        run: |
          case ${{ runner.os }} in
            Windows*)
              cmake -S . -B cmake-build \
                -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
                -G "Visual Studio 16 2019" \
                -A x64
              ;;
            *)
              cmake -S . -B cmake-build \
                -DCMAKE_BUILD_TYPE=${{ matrix.build-type }}
              ;;
          esac

      - name: Build
        run: cmake --build cmake-build --config ${{ matrix.build-type }}

      - name: Minimal Load Test (Windows)
        if: startsWith(runner.os, 'Windows')
        working-directory: cmake-build\${{ matrix.build-type }}
        run: ./re2c.exe --version

      - name: Test
        if: startsWith(runner.os, 'Windows') == false
        run: cmake --build cmake-build --target check
