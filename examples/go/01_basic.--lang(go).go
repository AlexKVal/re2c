// Code generated by re2c, DO NOT EDIT.
//line "go/01_basic.--lang(go).re":1
//go:generate "${RE2C}" --lang go "${GOFILE}" -o example_test.go
package main

import "testing"

const (
	err = iota
	bin
	oct
	dec
	hex
)

func lex(str string) int {
	var cursor, marker int

	
//line "go/01_basic.--lang(go).go":21
{
	var yych byte
	yych = str[cursor]
	switch (yych) {
	case '0':
		goto yy4
	case '1':
		fallthrough
	case '2':
		fallthrough
	case '3':
		fallthrough
	case '4':
		fallthrough
	case '5':
		fallthrough
	case '6':
		fallthrough
	case '7':
		fallthrough
	case '8':
		fallthrough
	case '9':
		goto yy5
	default:
		goto yy2
	}
yy2:
	cursor += 1
yy3:
//line "go/01_basic.--lang(go).re":31
	{ return err }
//line "go/01_basic.--lang(go).go":54
yy4:
	cursor += 1
	marker = cursor
	yych = str[cursor]
	switch (yych) {
	case 0x00:
		goto yy6
	case '0':
		fallthrough
	case '1':
		fallthrough
	case '2':
		fallthrough
	case '3':
		fallthrough
	case '4':
		fallthrough
	case '5':
		fallthrough
	case '6':
		fallthrough
	case '7':
		goto yy8
	case 'B':
		fallthrough
	case 'b':
		goto yy11
	case 'X':
		fallthrough
	case 'x':
		goto yy12
	default:
		goto yy3
	}
yy5:
	cursor += 1
	marker = cursor
	yych = str[cursor]
	switch (yych) {
	case 0x00:
		goto yy13
	case '0':
		fallthrough
	case '1':
		fallthrough
	case '2':
		fallthrough
	case '3':
		fallthrough
	case '4':
		fallthrough
	case '5':
		fallthrough
	case '6':
		fallthrough
	case '7':
		fallthrough
	case '8':
		fallthrough
	case '9':
		goto yy15
	default:
		goto yy3
	}
yy6:
	cursor += 1
//line "go/01_basic.--lang(go).re":33
	{ return oct }
//line "go/01_basic.--lang(go).go":123
yy8:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case 0x00:
		goto yy6
	case '0':
		fallthrough
	case '1':
		fallthrough
	case '2':
		fallthrough
	case '3':
		fallthrough
	case '4':
		fallthrough
	case '5':
		fallthrough
	case '6':
		fallthrough
	case '7':
		goto yy8
	default:
		goto yy10
	}
yy10:
	cursor = marker
	goto yy3
yy11:
	cursor += 1
	yych = str[cursor]
	if (yych <= 0x00) {
		goto yy10
	}
	goto yy18
yy12:
	cursor += 1
	yych = str[cursor]
	if (yych <= 0x00) {
		goto yy10
	}
	goto yy20
yy13:
	cursor += 1
//line "go/01_basic.--lang(go).re":34
	{ return dec }
//line "go/01_basic.--lang(go).go":170
yy15:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case 0x00:
		goto yy13
	case '0':
		fallthrough
	case '1':
		fallthrough
	case '2':
		fallthrough
	case '3':
		fallthrough
	case '4':
		fallthrough
	case '5':
		fallthrough
	case '6':
		fallthrough
	case '7':
		fallthrough
	case '8':
		fallthrough
	case '9':
		goto yy15
	default:
		goto yy10
	}
yy17:
	cursor += 1
	yych = str[cursor]
yy18:
	switch (yych) {
	case 0x00:
		goto yy21
	case '0':
		fallthrough
	case '1':
		goto yy17
	default:
		goto yy10
	}
yy19:
	cursor += 1
	yych = str[cursor]
yy20:
	switch (yych) {
	case 0x00:
		goto yy23
	case '0':
		fallthrough
	case '1':
		fallthrough
	case '2':
		fallthrough
	case '3':
		fallthrough
	case '4':
		fallthrough
	case '5':
		fallthrough
	case '6':
		fallthrough
	case '7':
		fallthrough
	case '8':
		fallthrough
	case '9':
		fallthrough
	case 'A':
		fallthrough
	case 'B':
		fallthrough
	case 'C':
		fallthrough
	case 'D':
		fallthrough
	case 'E':
		fallthrough
	case 'F':
		fallthrough
	case 'a':
		fallthrough
	case 'b':
		fallthrough
	case 'c':
		fallthrough
	case 'd':
		fallthrough
	case 'e':
		fallthrough
	case 'f':
		goto yy19
	default:
		goto yy10
	}
yy21:
	cursor += 1
//line "go/01_basic.--lang(go).re":32
	{ return bin }
//line "go/01_basic.--lang(go).go":272
yy23:
	cursor += 1
//line "go/01_basic.--lang(go).re":35
	{ return hex }
//line "go/01_basic.--lang(go).go":277
}
//line "go/01_basic.--lang(go).re":36

}

func TestLex(t *testing.T) {
	var tests = []struct {
		res int
		str string
	}{
		{err, "\000"},
		{bin, "0b1101\000"},
		{oct, "0644\000"},
		{dec, "1234567890\000"},
		{hex, "0x7ef\000"},
	}

	for _, x := range tests {
		t.Run(x.str, func(t *testing.T) {
			res := lex(x.str)
			if res != x.res {
				t.Errorf("got %d, want %d", res, x.res)
			}
		})
	}
}
